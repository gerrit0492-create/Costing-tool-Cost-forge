name: Restore repo from previous commit (auto PR)

on:
  workflow_dispatch:
    inputs:
      restore_sha:
        description: "Commit SHA met de laatst-werkende repo-snapshot"
        required: true
      include_paths:
        description: "Optioneel: alleen bepaalde paden (spatiegescheiden globs, bv: pages/** utils/**)"
        required: false
        default: ""
      include_workflows:
        description: "Ook .github/workflows herstellen? (meestal NEE)"
        required: false
        default: "false"

permissions:
  contents: write
  pull-requests: write

jobs:
  restore:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout (full history)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Tools
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Create restore branch
        id: mkbr
        shell: bash
        run: |
          set -euo pipefail
          BR="restore/${{ github.event.inputs.restore_sha }}-$(date +%Y%m%d-%H%M%S)"
          echo "branch=$BR" >> "$GITHUB_OUTPUT"
          git checkout -b "$BR"

      - name: Restore files from SHA (ALL or SELECTIVE)
        shell: bash
        run: |
          set -euo pipefail
          SHA="${{ github.event.inputs.restore_sha }}"
          PATHS="${{ github.event.inputs.include_paths }}"

          if [ -z "$PATHS" ]; then
            # Alles terugzetten
            git checkout "$SHA" -- .
          else
            # Alleen opgegeven paden/globs (spaties scheiden)
            for p in $PATHS; do
              git checkout "$SHA" -- "$p" || true
            done
          fi

          # Workflows NIET wijzigen, tenzij expliciet gevraagd
          if [ "${{ github.event.inputs.include_workflows }}" != "true" ]; then
            git restore --staged .github/workflows || true
            git checkout -- .github/workflows || true
          fi

          # Geen losse ZIP-bestanden meecommiten
          find . -maxdepth 1 -name "*.zip" -print -exec git rm -f {} \; || true

      - name: Commit & push branch
        id: push
        env:
          BRANCH_NAME: ${{ steps.mkbr.outputs.branch }}
        shell: bash
        run: |
          set -euo pipefail
          if [ -n "$(git status --porcelain)" ]; then
            git config user.name  "github-actions[bot]"
            git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
            git add -A
            git commit -m "restore: repo content from ${{ github.event.inputs.restore_sha }}"
            git push -u origin "$BRANCH_NAME"
            echo "pushed=yes" >> "$GITHUB_OUTPUT"
          else
            echo "pushed=no" >> "$GITHUB_OUTPUT"
          fi

      - name: Try to open Pull Request (best effort)
        if: ${{ steps.push.outputs.pushed == 'yes' }}
        id: pr
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPO: ${{ github.repository }}
          BRANCH_NAME: ${{ steps.mkbr.outputs.branch }}
        shell: bash
        run: |
          set -euo pipefail
          title="restore: repo content from ${{ github.event.inputs.restore_sha }}"
          body="Automatisch hersteld vanaf commit \`${{ github.event.inputs.restore_sha }}\`.\n\nControleer en merge."
          data=$(jq -n --arg t "$title" --arg h "$BRANCH_NAME" --arg b "main" --arg d "$body" '{title:$t, head:$h, base:$b, body:$d}')

          resp=$(curl -sS -X POST \
            -H "Authorization: Bearer ${GH_TOKEN}" \
            -H "Accept: application/vnd.github+json" \
            -d "$data" \
            "https://api.github.com/repos/${REPO}/pulls" || true)

          url=$(echo "$resp" | jq -r '.html_url // empty')
          if [ -n "$url" ] && [ "$url" != "null" ]; then
            echo "url=$url" >> "$GITHUB_OUTPUT"
            echo "✅ PR geopend: $url" >> "$GITHUB_STEP_SUMMARY"
          else
            echo "url=" >> "$GITHUB_OUTPUT"
            echo "⚠️ PR kon niet automatisch worden geopend (mogelijk repo-instelling). Er wordt hieronder een compare-link getoond." >> "$GITHUB_STEP_SUMMARY"
          fi

      - name: Fallback: show Compare & Merge link
        if: ${{ steps.push.outputs.pushed == 'yes' and steps.pr.outputs.url == '' }}
        env:
          REPO: ${{ github.repository }}
          BRANCH_NAME: ${{ steps.mkbr.outputs.branch }}
        shell: bash
        run: |
          echo "👉 Compare & merge: https://github.com/${REPO}/compare/main...${BRANCH_NAME}?expand=1" >> "$GITHUB_STEP_SUMMARY"
